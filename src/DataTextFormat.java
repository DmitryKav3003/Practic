import java.util.*;


public class DataTextFormat {
    public static void main(String[] args) {
        String c = String.format("%,d", 10000000);        //вставляем запятую и форматируем число как десятичное
        System.out.println(c);

        String z = String.format("%.2f" , 123423.434546); //форматируем число как дробное с двумя знаками
        System.out.println(z);                            //после запятой

        String a = String.format("%,.3f", 44546.565776);  //вставляем запятые и форматируем число как дробное
        System.out.println(a);                            //с точностью 3 десятичных знака

        String per = String.format(" Hi %n Hi");          //перенос текста на следующую строку
        System.out.println(per);

        Date date = new Date();
        System.out.printf(Locale.ENGLISH,"%td %tB %tY года %n%tH:%tM:%tS",date,date,date,date,date,date);
        //Выводит настоящую дату и время в заданном формате
        System.out.println();
        System.out.printf(Locale.ENGLISH,"%td %<tB %<tY года %n%<tH:%<tM:%<tS",date);
        //Тоже самое, что и код выше. < скбка говорит использовать предыдущий аргумент,
        //чтобы не писать несколько рад date date date

//                Флаги	Описание
//                %tB	Полное название месяца, например, January, February и т.д.
//                %tb	Сокращенное название месяца, например, Jan, Feb и т.д.
//                %tA	Полное название дня недели, например, Sunday, Monday
//                %ta	Сокращенное название дня недели, например, Sun, Mon и т.д.
//                %tY	Год в формате 4 цифры, например, от 0000 до 9999
//                %ty	Год в формате 2 цифры, например, от 00 до 99
//                %tm	Месяц отформатирован с нуля в начале, например, от 01 до 12
//                %tc	Дата и время в формате %ta %tb %td %tT %tZ %tY, например, Mon Feb 17 03:56:12 PST 2020
//                %tD	Дата в формате %tm/%td/%ty
//                %td	День месяца в формате двух цифр, например, от 01 до 31
//                %te	День месяца в формате без 0 в начале, например от 1 до 31
//                %tT	Время в 24-часовом формате, например, %tH:%tM:%tS
//                %tH	Час дня в 24-часовом формате, от 00 до 23
//                %tI	Час дня для 12-часового формата, например, от 01 до 12
//                %tM	Минуты в часе форматируются с нуля в начале, например, от 00 до 59
//                %tS	Секунды в минуте, состоящие из двух цифр, например, от 00 до 59
//                %tZ	Аббревиатура часового пояса, например, PST, UTC и т.д.
        System.out.println();
        System.out.println(date);
        System.out.printf("%tA", date); //Выводит день недели
        System.out.println();

        System.out.printf("Привет - %s! Как дела %s?", "Саша", "на работе");
        //%s используется для вставки объектов — строк.

//        %s	Любой тип, который будет приведен к строке
//        String.format("Привет %s!","мир")
//        Результат:
//        Привет мир!

//        %b	Любой тип, который будет приведен к boolean: true — если значение не null, false — если null
//        String.format("Привет %b!",null)
//        Результат:
//        Привет false

//        %h	Можно передавать любой объект, который будет приведен к шестнадцатеричной строке значения из метода hashCode ()
//        String.format("Привет %h!","мир")
//        Результат:
//        Привет 106c44!

//        %c	Используется для задания символа Unicode (char)
//        String.format("Привет м%cр!",'и')
//        Результат:
//        Привет мир!

//        %d	Задается целое число (int. byte, short, int, long, BigInteger)
//        String.format("Мне уже %d!",20)
//        Результат:
//        Мне уже 20!

//        %f	Используется для задания числа с плавающей запятой
//        String.format("Число ПИ равно -  %f!", 3.14159)
//        Результат:
//        Число ПИ равно - 3,141590!

//        %e	Числа с плавающей запятой в экспоненциальном представлении
//        String.format("Число ПИ равно -  %e!", 3.14159);
//        Результат:
//        Число ПИ равно - 3,141590e+00!

//        %a	Числа с плавающей запятой будут представлены в шестнадцатеричном виде
//        String.format("Число ПИ равно -  %a!", 3.14159)
//        Результат:
//        Число ПИ равно - 0x1.921f9f01b866ep1!

//        %x	Передается целое число (int. byte, short, int, long, BigInteger), результатом форматирования будет символ под данным номером в таблице ASCII
//        String.format("Мне уже %x!",25)
//        Результат:
//        Мне уже 19!

//        %o	Принимается целое число (int. byte, short, int, long, BigInteger), которое будет представлено в виде восьмеричного числа
//        String.format("Мне уже %o!",25);
//        Результат:
//        Мне уже 31!

//        %t	Префикс для преобразований даты и времени. Для форматирования требуются дополнительные флаги
//        String.format("Сегодня %tA",new Date())
//        Результат:
//        Сегодня суббота

//        %n	Разделитель строк для конкретной платформы. Аналог \n
//        String.format(" Привет %n Привет")
//        Результат:
//        Привет Привет

        Date date1 = new Date();
        Date date2 = new Date();               //значения даты всегда в милисекундах
        System.out.println((date1.getTime() > date2.getTime())?
                "date1 позже date2" : "date1 раньше date2");

    }
}
